jQuery 自动触发事件：
直接执行事件方法
使用trigger()方法完成模拟操作

.bind(),.live(),.delegate()和.on()之间的区别:
bind()方法将会把事件处理函数连接到所有匹配的标签。
优点:
适用于各种浏览器
连接事件处理函数非常方便快捷
可以使用 .click() ,  .hover()等简写方法来更方面地连接事件处理函数
对于一个简单的ID选择器,使用.bind() 方法不仅可以很快地连接事件处理函数,而且当事件被触发时, 事件处理函数几乎是马上就被调用了

缺点:
这样方法会将所有的事件处理函数附加到所有匹配的元素
不可以动态地匹配相同选择器的元素
当操作大量匹配的元素时会有性能方面的问题
附加操作是在前期完成的,这可能导致页面加载时存在性能问题

.live()方法将与事件处理函数关联的选择器和事件信息一起附加到文档的根级元素（即document）。通过将事件信息注册到document上，这个事件
       处理函数将允许所有冒泡到document的事件调用它（例如委托型、传播型事件）。
优点:
所有的事件处理函数都只会被注册一次，而不是像bind()那样进行多次注册
将bind()方法升级到live()方法非常方便，你仅需要将"bind"替代为"live"就可以了
那些被动态添加到DOM的元素也将被神奇的匹配到，因为真实的事件信息是被注册到document元素上的
你可以在文档加载完之前连接事件处理函数，这样可以帮助你更好地利用你可能没有用的时间

缺点:
这个方法在Jquery 1.7以后的版本被弃用了，你应该在你的代码里逐步放弃使用它
使用这个方法时链式操作没有得到正确的支持，可能会出现某些错误
所做的匹配操作基本上没用因为它只用于在document元素上注册事件处理函数
使用 event.stopPropogation() 方法将会没用，因为事件总是已经被委托到了document元素上
因为所有的选择器或者事件信息都被附加到document元素上了，所以一旦有一个事件要调用某个事件处理函数，Jquery会在一大堆储存的元数据中使用
matchesSelector方法来决定哪一个事件处理函数将会被调用，如果这个函数有的话。
因为你所连接的事件总是被委托到document上，所如果你的DOM的层级很深的话，这会导致一定的性能问题       
       
delegate()方法与live()方式实现方式相类似，它不是将选择器或者事件信息附加到document，而是让你指定附加的元素。就像是live()方法一样，
          这个方法使用事件委托来正确地工作。
优点:
你可以选择将选择器或者事件信息附加到指定的元素。
匹配操作实际上在前面并没有执行，而是用来注册到指定的元素。
链式操作可以得到正确的支持
Jquery仍然需要迭代这些选择器或者事件信息来匹配元素，不过因为你可以选择哪一个元素作为根元素，所以筛选的量会大幅减少
因为这项技术使用了事件委托机制，它可以匹配到被动态地添加到DOM的元素
你可以在文档加载完之前连接事件处理函数

缺点:
从.bind()方法不可以直接升级到.delegate()方法
Jquery仍然需要使用marchesSelector方法在附加到指定根元素的选择器或者事件信息中筛选决定哪一个事件处理函数会被调用。然而，附加到指定根元素的元数据会比使用live()方法的时候要小得多。
当操作大量匹配的元素时会有性能方面的问题
附加操作是在前期完成的,这可能导致页面加载时存在性能问题

on()方法决定了它如何调用其他方法.模拟bind(),live(),delegate()的实现
/* Jquery的 .bind() , .live() 和 .delegate() 方法只需要使用`.on()`方法一种方式来调用它们 */ 
// Bind
$( "#members li a" ).on( "click", function( e ) {} ); 
$( "#members li a" ).bind( "click", function( e ) {} );
 
// Live
$( document ).on( "click", "#members li a", function( e ) {} ); 
$( "#members li a" ).live( "click", function( e ) {} );
 
// Delegate
$( "#members" ).on( "click", "li a", function( e ) {} ); 
$( "#members" ).delegate( "li a", "click", function( e ) {} );



jQuery事件的区别：

Zepto.js
Zepto是一个轻量级的针对现代高级浏览器的JavaScript库，它与jquery有着类似的api。不支持IE

jQuery和Zepto的区别：
